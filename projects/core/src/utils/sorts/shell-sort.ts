// Shell sort
//
// Описание: Алгоритм сортировки, который является улучшением сортировки вставками.
// Суть его заключается в том, что он сначала сортирует элементы, находящиеся на определенном расстоянии друг от друга,
// а затем уменьшает это расстояние и сортирует элементы снова.
// Процесс продолжается до тех пор, пока расстояние между сравниваемыми элементами не станет равным 1.
// После этого выполняется обычная сортировка вставками.

// Сложности:
//
//  •	Лучший случай: Θ(n log n)
//  •	Средний случай: зависят от используемой последовательности интервалов, обычно от Θ(n^(3/2)) до Θ(n^2)
// 	•	Худший случай: Θ(n^2)
// 	•	Память: O(1) (in-place)
//
// Когда использовать: Эффективен для сортировки средних по размеру массивов, часто быстрее, чем прямая вставочная сортировка, но сложен для анализа.

// Пример кода:

export function shellSort(array: number[]): number[] {
  let length = array.length;
  let gap = Math.floor(length / 2);

  while (gap > 0) {
    for (let i = gap; i < length; i++) {
      let temp = array[i];
      let j = i;

      while (j >= gap && array[j - gap] > temp) {
        array[j] = array[j - gap];
        j -= gap;
      }

      array[j] = temp;
    }

    gap = Math.floor(gap / 2);
  }

  return array;
}
